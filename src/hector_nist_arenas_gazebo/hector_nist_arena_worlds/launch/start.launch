<?xml version="1.0"?>

<launch>

  <!-- <arg name="laser_enabled" default="true"/> -->
  <!-- <arg name="realsense_enabled" default="true"/> -->
  <!-- <arg name="urdf_extras" default=""/> -->

	<arg name="x" default="-10.0"/>
	<arg name="y" default="10.75"/>
	<arg name="z" default="0.13"/>
	<arg name="yaw" default="0.00"/>
  <!-- <arg name="joystick" default="true" /> -->

	<arg name="world"/>

	<arg name="map_file" default="$(find hector_nist_arena_worlds)/worlds/map_test_new.yaml"/>

  <arg name="ground_truth_topic" default="husky_base_ground_truth"/>

	<arg name="gui" default="true"/>
	<arg name="gazebo_args" default="-u"/>
	
	<param name="/use_sim_time" value="true" />

	<node name="gazebo" pkg="gazebo_ros" type="gzserver" args="$(arg gazebo_args) $(find hector_nist_arena_worlds)/worlds/$(arg world)" respawn="false" output="screen"/>
	
		<!-- start gui -->
	<group if="$(arg gui)">
		<node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
	</group>

	<include file="$(find husky_gazebo)/launch/spawn_husky.launch">
<!-- 		<arg name="laser_enabled" value="$(arg laser_enabled)"/>
		<arg name="realsense_enabled" value="$(arg realsense_enabled)"/>
		<arg name="urdf_extras" value="$(arg urdf_extras)"/> -->
		<arg name="x" value="$(arg x)"/>
		<arg name="y" value="$(arg y)"/>
		<arg name="z" value="$(arg z)"/>
		<arg name="yaw" value="$(arg yaw)"/>
	</include>


	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>
	<arg name="scan_topic" default="$(eval optenv('HUSKY_LASER_TOPIC', 'scan'))" />


  <include file="$(find husky_navigation)/launch/amcl.launch">
    <arg name="scan_topic" value="scan" />
  </include>

  <!-- Fake/perfect localization -->
  <!-- Fake localisation needs proadcaster to connect map and odom -->
<!--   <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 /map /odom 100" />
  <node pkg="fake_localization" type="fake_localization" name="fake_localization">
    <remap from="base_pose_ground_truth" to="$(arg ground_truth_topic)"/>
 --><!--     <param name="delta_x" value="-9.08"/>
    <param name="delta_y" value="6.95"/>
    <param name="delta_yaw" value="3.14"/>
  </node> -->


	<include file="$(find husky_navigation)/launch/move_base.launch"/>
	<include file="$(find husky_viz)/launch/view_robot.launch"/>

	<node respawn="true" pkg="joy"
	type="joy_node" name="joy_activate" >
		<param name="dev" type="string" value="/dev/input/js0" />
		<param name="deadzone" value="0.12" />
	</node>

	<node name='laserScanVisualiser' pkg='rv_test' type='laserScanVisualiser'/>
	<!-- <node name='activate_noise_joystick' pkg='laser_noise' type='activate_noise_joystick'/>
	 --><node name='snr_estimator' pkg='rv_test' type='snr_estimator.py'/>

	<!-- Preprocessing for vitals -->
	<node name='magDist_odom_maker' pkg ='create_vitals' type = 'magDist_odom.py'/>
	<node name='magDistFromGoal_differentiator' pkg ='create_vitals' type = 'magDist_odom_differentiator.py'/>
	<node name='odomPosErr_differentiator' pkg='create_vitals' type = 'odomPosErr_differentiator.py'/>
	<node name='odomMag_differentiator' pkg='create_vitals' type='velocity_from_odomMag_differentiator.py'/>
	<node name='linAcc_z_roc_maker' pkg = 'create_vitals' type='linAcc_differentiator.py'/>


	<!-- Creating the vitals -->
	<node name='magROC_event_maker' pkg = 'create_vitals' type='magROC_event_detection.py'/>

	<node name='velocity_event_creator' pkg = 'create_vitals' type='velocity_from_odom_event_detection.py'/>

	<node name='odomPosErr_event_creator' pkg = 'create_vitals' type='odomPosErr_event_detection.py'/>

	<!-- Creating the probabilities of suffering -->
	<node name='ProbabilitOfSuffering' pkg = 'create_vitals' type = 'probabilityOfSuffering.py'/>


	<!-- Publish suffering and health -->
	<node name='sufferingAndHealth' pkg = 'create_vitals' type = 'healthAndSuffering.py'/>



</launch>


